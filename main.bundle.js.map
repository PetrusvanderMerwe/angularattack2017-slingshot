{"version":3,"sources":["webpack:///./src async","webpack:///./src/main.ts","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/classes/ExoplanetArchiveAPI.ts","webpack:///./src/app/classes/gazedStar.ts","webpack:///./src/app/classes/star.ts","webpack:///./src/app/orbit/orbit.component.ts","webpack:///./src/app/stargaze/stargaze.component.ts","webpack:///./src/app/startable/startable.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/orbit/orbit.component.css","webpack:///./src/app/stargaze/stargaze.component.css","webpack:///./src/app/startable/startable.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/orbit/orbit.component.html","webpack:///./src/app/stargaze/stargaze.component.html","webpack:///./src/app/startable/startable.component.html","webpack:///./src/app/stardata.service.ts","webpack:///./src/app/classes/RenderEngine.ts","webpack:///./src/app/orbit.service.ts","webpack:///./src/app/stargaze.service.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyContext(req) {\n\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 129;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src async\n// module id = 129\n// module chunks = 1","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpModule } from '@angular/http';\nimport { AppComponent } from './app.component';\nimport { OrbitComponent } from './orbit/orbit.component';\nimport { StargazeComponent } from './stargaze/stargaze.component';\nimport { StardataService } from './stardata.service';\nimport { StartableComponent } from './startable/startable.component';\nimport { StargazeService } from './stargaze.service';\nimport { OrbitService } from './orbit.service';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    OrbitComponent,\n    StargazeComponent,\n    StartableComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpModule\n  ],\n  providers: [StardataService, StargazeService, OrbitService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","export class ExoplanetArchiveAPI {\r\n    private static readonly API_BASE_URL = 'https://exoplanetarchive.ipac.caltech.edu/cgi-bin/nstedAPI/nph-nstedAPI?';\r\n\r\n    private static readonly ARGUMENT_TABLE = 'table';\r\n    private static readonly ARGUMENT_SELECT = 'select';\r\n    private static readonly ARGUMENT_FORMAT = 'format';\r\n    private static readonly VALUE_PIPED = 'pipe';\r\n    private static readonly PREDICATE_DISTINCT = 'distinct';\r\n\r\n    private static readonly TABLE_CONFIRMED_PLANETS = 'exoplanets';\r\n\r\n    private static readonly FIELD_STAR_NAME = 'pl_hostname';\r\n    private static readonly FIELD_NUMBER_OF_PLANETS = 'pl_pnum';\r\n    private static readonly FIELD_ELIPTIC_LONGITUDE = 'st_elon';\r\n    private static readonly FIELD_ELIPTIC_LATITUDE = 'st_elat';\r\n\r\n    public static BuildStarDataURL():string {\r\n        return this.BuildApiURL(this.TABLE_CONFIRMED_PLANETS, \r\n                                [this.FIELD_STAR_NAME, \r\n                                 this.FIELD_NUMBER_OF_PLANETS, \r\n                                 this.FIELD_ELIPTIC_LONGITUDE, \r\n                                 this.FIELD_ELIPTIC_LATITUDE], \r\n                                true);\r\n    }\r\n\r\n    private static BuildApiURL(table:string, fields:string[], distinct: boolean):string {\r\n\r\n        // api base url\r\n        let url:string = this.API_BASE_URL;\r\n\r\n        // table\r\n        url += this.ARGUMENT_TABLE + '=' + table;\r\n\r\n        // select\r\n        if (fields.length > 0) { \r\n            url += '&' + this.ARGUMENT_SELECT + ((distinct) ? '=' + this.PREDICATE_DISTINCT + ' ': ''); \r\n            fields.forEach((field, index) => {\r\n                if (index > 0) { url += ','; };\r\n                url += field;\r\n            });\r\n        }\r\n\r\n        // format\r\n        url += '&' + this.ARGUMENT_FORMAT + '=' + this.VALUE_PIPED;\r\n\r\n        return url;\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/classes/ExoplanetArchiveAPI.ts","import { Star } from './star';\r\nimport { RenderEngine } from './RenderEngine';\r\nimport * as BABYLON from 'babylonjs';\r\n\r\nexport class GazedStar {\r\n    public star: Star;\r\n    public billboard: BABYLON.Mesh;\r\n    public sphere: BABYLON.Mesh;\r\n    public position: BABYLON.Vector3;\r\n    public renderEngine: RenderEngine;\r\n\r\n    public readonly DRAWN_DISTANCE: number = 220;\r\n    public readonly BILLBOARD_DIAMETER: number = 8;\r\n    public readonly SPHERE_DIAMETER: number = 1.5;\r\n\r\n    constructor(star: Star, renderEngine: RenderEngine) {\r\n        this.star = star;\r\n        this.renderEngine = renderEngine;\r\n        this.computeParameters();\r\n        this.billboard = this.renderEngine.addBillboard(this.star.StarName, this.BILLBOARD_DIAMETER, this.position, './assets/StarBillboardTexture.png');\r\n        this.sphere = this.renderEngine.addSphere(this.star.StarName, this.position, this.SPHERE_DIAMETER);\r\n    }\r\n\r\n    computeParameters() {\r\n        this.computePosition();\r\n    }\r\n\r\n    computePosition() {\r\n        let r:number = this.DRAWN_DISTANCE;\r\n        let y:number = r * Math.sin(this.star.ElipticLatitude);\r\n        let r2 = r * Math.cos(this.star.ElipticLatitude);\r\n        let x:number = r2 * Math.sin(this.star.ElipticLongitude);\r\n        let z:number = r2 * Math.cos(this.star.ElipticLongitude);\r\n        this.position = new BABYLON.Vector3(x, y, z);\r\n    }   \r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/classes/gazedStar.ts","export class Star {\r\n    public StarName: string;\r\n    public NumberOfPlanets: number;\r\n    public ElipticLongitude: number;\r\n    public ElipticLatitude: number;\r\n\r\n    constructor(starName: string, numberOfPlanets: number, elipticLongitude: number, elipticLatitude: number) {\r\n        this.StarName = starName;\r\n        this.NumberOfPlanets = numberOfPlanets;\r\n        this.ElipticLongitude = elipticLongitude;\r\n        this.ElipticLatitude = elipticLatitude;\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/classes/star.ts","import { Component, OnInit, OnDestroy, AfterViewInit, ViewChild, ElementRef } from '@angular/core';\nimport * as BABYLON from 'babylonjs';\nimport { OrbitService } from './../orbit.service';\n\n@Component({\n  selector: 'app-orbit',\n  templateUrl: './orbit.component.html',\n  styleUrls: ['./orbit.component.css']\n})\nexport class OrbitComponent implements OnInit, OnDestroy, AfterViewInit {\n\n  @ViewChild('renderCanvas') renderCanvas:ElementRef;\n\n  constructor(private orbitService:OrbitService) { }\n\n  ngOnInit() { }\n\n  ngAfterViewInit() {\n    this.orbitService.init(this.renderCanvas.nativeElement);\n  }\n\n  ngOnDestroy() {\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/orbit/orbit.component.ts","import { Component, OnInit, OnDestroy, AfterViewInit, ViewChild, ElementRef } from '@angular/core';\nimport * as BABYLON from 'babylonjs';\nimport { StardataService } from './../stardata.service';\nimport { StargazeService } from './../stargaze.service';\nimport { Star } from \"./../classes/star\";\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-stargaze',\n  templateUrl: './stargaze.component.html',\n  styleUrls: ['./stargaze.component.css']\n})\nexport class StargazeComponent implements OnInit, OnDestroy, AfterViewInit {\n\n  stars: Observable<Star[]>;\n\n\n  @ViewChild('renderCanvas') renderCanvas:ElementRef;\n\n  constructor(private stargazeService:StargazeService, private stardataService:StardataService) { }\n\n  ngOnInit() { \n    this.stars = this.stardataService.getStars();\n  }\n\n  ngAfterViewInit() {\n    this.stars.subscribe(stars => { this.stargazeService.init(this.renderCanvas.nativeElement, stars); });\n  }\n\n  ngOnDestroy() {\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/stargaze/stargaze.component.ts","import { Component, OnInit } from '@angular/core';\nimport { StardataService } from './../stardata.service';\nimport { Star } from \"./../classes/star\";\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-startable',\n  templateUrl: './startable.component.html',\n  styleUrls: ['./startable.component.css']\n})\nexport class StartableComponent implements OnInit {\n\n  stars: Observable<Star[]>;\n\n  constructor(private stardataService:StardataService) { }\n\n  ngOnInit() {\n    this.stars = this.stardataService.getStars();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/startable/startable.component.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.ts","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \"body\\r\\n{\\r\\n    margin:0; \\r\\n    padding:0;\\r\\n}\\r\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.css\n// module id = 198\n// module chunks = 1","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \".renderCanvas \\r\\n{\\r\\n    width: 100%;\\r\\n    height: 100%;    \\r\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/orbit/orbit.component.css\n// module id = 199\n// module chunks = 1","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \".renderCanvas \\r\\n{\\r\\n    width: 100%;\\r\\n    height: 100%;    \\r\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/stargaze/stargaze.component.css\n// module id = 200\n// module chunks = 1","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/startable/startable.component.css\n// module id = 201\n// module chunks = 1","module.exports = \"<app-stargaze></app-stargaze>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.html\n// module id = 203\n// module chunks = 1","module.exports = \"<canvas #renderCanvas class=\\\"renderCanvas\\\"></canvas>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/orbit/orbit.component.html\n// module id = 204\n// module chunks = 1","module.exports = \"<canvas #renderCanvas class=\\\"renderCanvas\\\"></canvas>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/stargaze/stargaze.component.html\n// module id = 205\n// module chunks = 1","module.exports = \"<div *ngFor=\\\"let star of stars |async\\\">{{star|json}}</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/startable/startable.component.html\n// module id = 206\n// module chunks = 1","import { Injectable } from '@angular/core';\nimport { Http } from '@angular/http';\nimport { Star } from \"./classes/star\";\nimport { ExoplanetArchiveAPI } from \"./classes/ExoplanetArchiveAPI\";\nimport { Observable  } from 'rxjs';\nimport 'rxjs/Rx';\n\n@Injectable()\nexport class StardataService {\n\n  private starsObservable:Observable<Star[]>;\n\n  constructor(private http: Http) { }\n\n  getStars(): Observable<Star[]> {\n    if (this.starsObservable == null) { \n      this.starsObservable = this.http.get(ExoplanetArchiveAPI.BuildStarDataURL()).map(response=>this.mapStarData(response.text()) as Star[]);\n    }\n    return this.starsObservable;\n  }\n\n  mapStarData(starData:string): Star[] {\n    return this.splitPipedData(starData).map((row)=>this.mapStarRow(row));\n  }\n\n  mapStarRow(starRow:string[]): Star {\n    return new Star(starRow[0], Number(starRow[1]), Number(starRow[2]), Number(starRow[3]));\n  }\n\n  splitPipedData(textData:string): string[][] {\n    let data:string[][] = [];\n\n    let rows:string[] = textData.split('\\n');\n    rows.forEach((row, index) => { if (index > 0) { data.push(row.split('|')); } });\n    if (rows.length > 0) { rows = rows.splice(0, 1); }    \n\n    return data;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/stardata.service.ts","import * as BABYLON from 'babylonjs';\r\n\r\nexport class RenderEngine {\r\n    public canvas: HTMLCanvasElement;\r\n    public engine: BABYLON.Engine;\r\n    public scene: BABYLON.Scene;\r\n    public camera: BABYLON.FreeCamera;\r\n    public light: BABYLON.Light;    \r\n\r\n    constructor(canvas: HTMLCanvasElement) {\r\n        this.canvas = canvas;\r\n        this.engine = new BABYLON.Engine(this.canvas);\r\n        this.createScene();\r\n        this.engine.runRenderLoop(() => {this.scene.render(); });\r\n    }\r\n\r\n    createScene() {\r\n        this.scene = new BABYLON.Scene(this.engine);\r\n        this.scene.clearColor = new BABYLON.Color4(0, 0, 0, 1);\r\n    }\r\n\r\n    createFreeCamera() {\r\n        this.camera = new BABYLON.FreeCamera('camera1', new BABYLON.Vector3(0, 0, 0), this.scene);\r\n        this.camera.setTarget(new BABYLON.Vector3(0, 0, 1));\r\n        this.camera.attachControl(this.canvas, false);\r\n    }\r\n\r\n    createHemisphericLight() {\r\n        this.light = new BABYLON.HemisphericLight('hemisphericLight', new BABYLON.Vector3(0, 1, 0), this.scene);\r\n    }\r\n\r\n    createPointLight(position:BABYLON.Vector3) {\r\n        this.light = new BABYLON.PointLight('pointLight', position, this.scene);\r\n    }\r\n\r\n    addBillboard(name:string, size: number, position: BABYLON.Vector3, pathToTexture): BABYLON.Mesh {\r\n\r\n        // mesh\r\n        let billboard:BABYLON.Mesh = BABYLON.MeshBuilder.CreatePlane(name, { size: size }, this.scene);\r\n        billboard.billboardMode = BABYLON.Mesh.BILLBOARDMODE_ALL;\r\n        billboard.position = position;\r\n\r\n        // material\r\n        let material: BABYLON.StandardMaterial = new BABYLON.StandardMaterial(name + \"_material\", this.scene);\r\n        material.diffuseTexture = new BABYLON.Texture(pathToTexture, this.scene);\r\n        material.opacityTexture = new BABYLON.Texture(pathToTexture, this.scene);\r\n        material.specularColor = new BABYLON.Color3(0, 0, 0);\r\n        material.specularPower = 0;\r\n        billboard.material = material;\r\n\r\n        return billboard;\r\n    }\r\n\r\n    addSphere(name: string, position: BABYLON.Vector3, diameter: number): BABYLON.Mesh  {\r\n        let sphere: BABYLON.Mesh = BABYLON.MeshBuilder.CreateSphere(name, { segments: 16, diameter: diameter, updatable: true }, this.scene);\r\n        sphere.position = position;\r\n        return sphere;\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/classes/RenderEngine.ts","import { Injectable } from '@angular/core';\nimport { RenderEngine } from './classes/RenderEngine';\n\n@Injectable()\nexport class OrbitService {\n  public engine: RenderEngine;\n\n  constructor() { }\n\n    public init(canvas: HTMLCanvasElement) {\n        this.engine = new RenderEngine(canvas);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/orbit.service.ts","import { Injectable } from '@angular/core';\nimport { RenderEngine } from './classes/RenderEngine';\nimport { Star } from './classes/star';\nimport { GazedStar } from './classes/gazedStar';\nimport * as BABYLON from 'babylonjs';\n\n@Injectable()\nexport class StargazeService {\n  public engine: RenderEngine;\n  public gazedStars: GazedStar[];\n\n  constructor() { }\n\n  public init(canvas: HTMLCanvasElement, stars: Star[]) {\n    this.engine = new RenderEngine(canvas);\n    this.setupScene(stars);\n  }\n\n  private setupScene(stars: Star[]) {\n    this.engine.createFreeCamera();\n    this.engine.createPointLight(new BABYLON.Vector3(0, 0, 0));\n\n    let gazedStars: GazedStar[] = [];\n    stars.forEach(star => gazedStars.push(new GazedStar(star, this.engine)));\n\n    this.gazedStars = gazedStars;\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/stargaze.service.ts"],"sourceRoot":""}